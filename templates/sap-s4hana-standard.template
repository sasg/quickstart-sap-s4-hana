{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy SAP S/4HANA on AWS in One Host",
    "Parameters": {
        "VPCID": {
            "Description": "The existing Amazon VPC where you want to deploy SAP HANA.",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PrivSubCIDR": {
            "Description": "CIDR block of the private subnet where SAP HANA will be deployed.",
            "Type": "String",
            "Default": "10.0.1.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
        },
        "DMZCIDR": {
            "Description": "CIDR block of the public DMZ subnet where BASTION Host / NAT Gateway exist.",
            "Type": "String",
            "Default": "10.0.2.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
        },
        "RemoteAccessCIDR": {
            "Description": "CIDR block from where you want to access your RDP instance.",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "This must be a valid CIDR range in the format x.x.x.x/x."
        },
        "HANASubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "The existing private subnet in your VPC where you want to deploy SAP HANA."
        },
        "ApplicationCIDR": {
            "Description": "CIDR block of subnet where SAP Application servers are deployed.",
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "0.0.0.0/0",
            "ConstraintDescription": "This must be a valid CIDR range in the format x.x.x.x/x."
        },
        "DMZSubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "The existing public subnet in your VPC where you want to deploy the optional RDP instance."
        },
        "DomainName": {
            "Type": "String",
            "Description": "Name to use for fully qualified domain names.",
            "Default": "local"
        },
        "HANAMasterHostname": {
            "Type": "String",
            "Description": "Host name to use for SAP HANA master node (DNS short name).",
            "Default": "imdbmaster"
        },
        "HANAWorkerHostname": {
            "Type": "String",
            "Description": "Host name to use for SAP HANA worker node(s) (DNS short name).",
            "Default": "imdbworker"
        },
        "PlacementGroupName": {
            "Type": "String",
            "Default": "",
            "Description": "Name of an existing placement group where SAP HANA should be deployed (for scale-out deployments."
        },
        "Proxy": {
            "Description": "Proxy address for http access (e.g., http://xyz.abc.com:8080 or http://10.x.x.x:8080).",
            "Type": "String",
            "Default": ""
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "home",
            "Description": "Name of an existing Amazon EC2 key pair. All instances will launch with this key pair."
        },
        "HANAInstallMedia": {
            "Description": "Full path to Amazon S3 location of SAP HANA software files (e.g., s3://myhanabucket/sap-hana-sps11/).",
            "Type": "String",
            "Default": ""
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-sap-netweaver-abap/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "SAPInstallMediaBucket": {
            "Default": "my-sw-bucket",
            "Description": "Name of your S3 bucket for your SAP NetWeaver s/w. Do *NOT* include s3:// (use just your bucket name)",
            "Type": "String"
        },
        "SAPInstallMediaKeyPrefix": {
            "Default": "my/sw/version/",
            "Description": "Name of your S3 Key Prefix for your SAP NetWeaver s/w. Leave blank if you do not use a Key Prefix",
            "Type": "String"
        },
        "EnableLogging": {
            "Description": "Enable (Yes) or disable (No) logging with AWS CloudTrail and AWS Config.",
            "Default": "No",
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "CloudTrailS3Bucket": {
            "Description": "Name of S3 bucket where AWS CloudTrail trails and AWS Config log files can be stored (e.g., mycloudtrail).",
            "Default": "",
            "Type": "String"
        },
        "AutoRecovery": {
            "Type": "String",
            "Description": "Enable (Yes) or disable (No) automatic recovery feature for SAP HANA nodes. Disable it for Dedicated Host Deployments",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "Encryption": {
            "Type": "String",
            "Description": "Enable (Yes) or disable (No) encryption on EBS volumes.",
            "Default": "No",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "VolumeTypeHanaData": {
            "Type": "String",
            "Description": "EBS volume type for SAP HANA Data: General Purpose SSD (gp2) or Provisioned IOPS SSD (io1).",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1"
            ]
        },
        "VolumeTypeHanaLog": {
            "Type": "String",
            "Description": "EBS volume type for SAP HANA Log: General Purpose SSD (gp2) or Provisioned IOPS SSD (io1).",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1"
            ]
        },
        "MyOS": {
            "AllowedValues": [
                "Red-Hat-Enterprise-Linux-7.5-For-SAP-HVM",
                "Red-Hat-Enterprise-Linux-7.4-For-SAP-HA-US-HVM",
                "Red-Hat-Enterprise-Linux-7.5-For-SAP-HA-US-HVM",
                "Red-Hat-Enterprise-Linux-7.6-For-SAP-HA-US-HVM",
                "SuSE-Linux-11-SP4-HVM",
                "SuSE-Linux-12-SP1-HVM",
                "SuSE-Linux-12-SP3-HVM",
                "SuSE-Linux-12-SP4-HVM",
                "SuSE-Linux-15-HVM",
                "SuSE-Linux-12-SP2-For-SAP-HVM",
                "SuSE-Linux-12-SP3-For-SAP-HVM",
                "SuSE-Linux-12-SP4-For-SAP-HVM",
                "SuSE-Linux-15-For-SAP-HVM",
                "SuSE-Linux-12-SP1-For-SAP-BYOS-HVM",
                "SuSE-Linux-12-SP2-For-SAP-BYOS-HVM",
                "SuSE-Linux-12-SP3-For-SAP-BYOS-HVM",
                "SuSE-Linux-12-SP4-For-SAP-BYOS-HVM",
                "SuSE-Linux-15-For-SAP-BYOS-HVM"
            ],
            "Default": "SuSE-Linux-12-SP4-For-SAP-HVM",
            "Description": "Operating system version for SAP servers.",
            "Type": "String"
        },
        "SLESBYOSRegCode": {
            "Type": "String",
            "Default": "",
            "Description": "Registration code for SUSE BYOS (Applicable only if you use BYOS Option).",
            "NoEcho": "true"
        },
        "InstallRDPInstance": {
            "Type": "String",
            "Description": "Install (Yes) or don't install (No) optional Windows RDP instance.",
            "Default": "No",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "InstallHANA": {
            "Type": "String",
            "Description": "Install (Yes) or don't install (No) HANA. When set to No, only AWS infrastructure is provisioned.",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "RDPInstanceType": {
            "Type": "String",
            "Description": "Instance type for Windows RDP instance.",
            "Default": "c4.large",
            "AllowedValues": [
                "c4.large",
                "c4.xlarge",
                "c5.large",
                "c5.xlarge",
                "m4.large",
                "m4.xlarge",
                "m5.large",
                "m5.xlarge"
            ]
        },
        "MyInstanceType": {
            "Type": "String",
            "Description": "Instance type for SAP HANA host.",
            "Default": "r5.2xlarge",
            "AllowedValues": [
                "r3.8xlarge",
                "r3.4xlarge",
                "r3.2xlarge",
                "r4.16xlarge",
                "r4.8xlarge",
                "r4.4xlarge",
                "r4.2xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.12xlarge",
                "r5.24xlarge",
                "r5.metal",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.32xlarge",
                "u-6tb1.metal",
                "u-9tb1.metal",
                "u-12tb1.metal",
                "u-18tb1.metal",
                "u-24tb1.metal"
            ]
        },
        "DedicatedHostId": {
            "Type": "CommaDelimitedList",
            "Description": "Existing dedicated host(s) where you want to launch your EC2 instance(s). Use comma to provide multiple hosts. Mandatory for Amazon EC2 High Memory Instances.",
            "Default": ""
        },
        "HostCount": {
            "Type": "Number",
            "Description": "Total number of SAP HANA nodes you want to deploy in the SAP HANA cluster.",
            "Default": "1",
            "MinValue": "1",
            "MaxValue": "5"
        },
        "SID": {
            "Type": "String",
            "Default": "HDB",
            "Description": "SAP HANA Database System ID",
            "AllowedPattern": "([A-Z]{1}[0-9A-Z]{2})",
            "ConstraintDescription": "This value must consist of 3 characters."
        },
        "SAPSID": {
            "Type": "String",
            "Default": "S4P",
            "Description": "S/4HANA System ID",
            "AllowedPattern": "([A-Z]{1}[0-9A-Z]{2})",
            "ConstraintDescription": "This value must consist of 3 characters."
        },
        "SAPInstanceNum": {
            "Type": "String",
            "Default": "00",
            "Description": "SAP HANA instance number to use for installation and setup, and to open ports for security groups.",
            "AllowedPattern": "([0-8]{1}[0-9]{1}|[9]{1}[0-7]{1})",
            "ConstraintDescription": "Instance number must be between 00 and 97."
        },
        "HANAMasterPass": {
            "Type": "String",
            "Description": "SAP Master password. Must be at least 8 characters with uppercase, lowercase, and numeric values.",
            "NoEcho": "true",
            "MinLength": "8",
            "AllowedPattern": "^(?=.*?[a-z])(?=.*?[A-Z])(?=.*[0-9]).*",
            "ConstraintDescription": "This must be at least 8 characters, including uppercase, lowercase, and numeric values."
        },
        "SAPTZ": {
            "AllowedValues": [
                "CT",
                "ET",
                "JT",
                "PT",
                "UC"
            ],
            "ConstraintDescription": "This value must consist of 2 characters.",
            "Default": "UC",
            "Description": "The TimeZone of your SAP HANA Server (PT, CT, ET, or UTC)",
            "Type": "String"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Existing network infrastructure details"
                    },
                    "Description": {
                        "default": ""
                    },
                    "Parameters": [
                        "VPCID",
                        "HANASubnet",
                        "DMZSubnet",
                        "PrivSubCIDR",
                        "DMZCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Server and storage configuration"
                    },
                    "Description": {
                        "default": ""
                    },
                    "Parameters": [
                        "MyOS",
                        "SLESBYOSRegCode",
                        "MyInstanceType",
                        "HostCount",
                        "DedicatedHostId",
                        "AutoRecovery",
                        "KeyName",
                        "VolumeTypeHanaData",
                        "VolumeTypeHanaLog",
                        "Encryption"
                    ]
                },
                {
                    "Label": {
                        "default": "SAP HANA database configuration"
                    },
                    "Description": {
                        "default": ""
                    },
                    "Parameters": [
                        "DomainName",
                        "HANAMasterHostname",
                        "HANAWorkerHostname",
                        "SID",
                        "SAPSID",
                        "SAPInstanceNum",
                        "HANAMasterPass",
                        "SAPTZ",
                        "HANAInstallMedia",
                        "SAPInstallMediaBucket",
                        "SAPInstallMediaKeyPrefix",
                        "InstallHANA"
                    ]
                },
                {
                    "Label": {
                        "default": "Optional configuration"
                    },
                    "Description": {
                        "default": ""
                    },
                    "Parameters": [
                        "PlacementGroupName",
                        "InstallRDPInstance",
                        "RDPInstanceType",
                        "RemoteAccessCIDR",
                        "ApplicationCIDR",
                        "EnableLogging",
                        "CloudTrailS3Bucket",
                        "Proxy"
                    ]
                },
                {
                    "Label": {
                        "default": "Advanced configuration (Do not modify unless directed by AWS Support)"
                    },
                    "Description": {
                        "default": ""
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPCID": {
                    "default": "Choose VPC ID"
                },
                "PrivSubCIDR": {
                    "default": "Enter CIDR block for private subnet"
                },
                "DMZSubnet": {
                    "default": "Choose public subnet"
                },
                "DMZCIDR": {
                    "default": "Enter CIDR block for public subnet"
                },
                "HANASubnet": {
                    "default": "Choose private subnet"
                },
                "RemoteAccessCIDR": {
                    "default": "Enter CIDR block for RDP access"
                },
                "DomainName": {
                    "default": "Enter domain name"
                },
                "HANAMasterHostname": {
                    "default": "Enter SAP HANA master host name"
                },
                "HANAWorkerHostname": {
                    "default": "Enter SAP HANA worker host name"
                },
                "HANAInstallMedia": {
                    "default": "Enter Amazon S3 URL for SAP HANA software"
                },
                "SAPInstallMediaBucket": {
                    "Ref": "SAPInstallMediaBucket"
                },
                "SAPInstallMediaKeyPrefix": {
                    "Ref": "SAPInstallMediaKeyPrefix"
                },
                "CloudTrailS3Bucket": {
                    "default": "Enter S3 bucket name to store AWS CloudTrail trails and AWS Config logs"
                },
                "PlacementGroupName": {
                    "default": "Enter optional placement group name"
                },
                "DedicatedHostId": {
                    "default": "Enter Dedicated Host ID"
                },
                "QSS3BucketName": {
                    "default": "S3 bucket name for the Quick Start assets."
                },
                "QSS3KeyPrefix": {
                    "default": "S3 key prefix for the Quick Start assets"
                },
                "Proxy": {
                    "default": "Enter proxy server address"
                },
                "KeyName": {
                    "default": "Choose key pair"
                },
                "AutoRecovery": {
                    "default": "Would you like to turn on automatic recovery?"
                },
                "InstallRDPInstance": {
                    "default": "Do you need a Windows RDP instance?"
                },
                "InstallHANA": {
                    "default": "Install SAP HANA software?"
                },
                "Encryption": {
                    "default": "Would you like to turn on encryption?"
                },
                "VolumeTypeHanaData": {
                    "default": "Choose storage volume type for SAP HANA Data"
                },
                "VolumeTypeHanaLog": {
                    "default": "Choose storage volume type for SAP HANA Log"
                },
                "MyOS": {
                    "default": "Choose operating system for SAP HANA"
                },
                "SLESBYOSRegCode": {
                    "default": "Enter SUSE BYOS Registration Code"
                },
                "MyInstanceType": {
                    "default": "Choose instance type for SAP HANA"
                },
                "HostCount": {
                    "default": "Enter number of SAP HANA hosts"
                },
                "SID": {
                    "default": "Enter SAP HANA system ID"
                },
                "SAPSID": {
                    "default": "Enter S/4HANA system ID"
                },
                "SAPInstanceNum": {
                    "default": "Enter SAP HANA instance number"
                },
                "HANAMasterPass": {
                    "default": "Enter SAP HANA password"
                },
                "RDPInstanceType": {
                    "default": "Choose instance type for RDP host"
                },
                "EnableLogging": {
                    "default": "Would you like to enable AWS CloudTrail trails and AWS Config?"
                },
                "SAPTZ": {
                    "default": "Enter SAP HANA Server timezone"
                },
                "ApplicationCIDR": {
                    "default": "Enter CIDR block of your SAP Application Servers"
                }
            }
        }
    },
    "Conditions": {
        "TwoOrMoreNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "2",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "3",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "4",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "5",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "6",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                }
            ]
        },
        "ThreeOrMoreNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "3",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "4",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "5",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "6",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                }
            ]
        },
        "FourOrMoreNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "4",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "5",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "6",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                }
            ]
        },
        "FiveOrMoreNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "5",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "6",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                }
            ]
        },
        "SixOrMoreNodes": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        "6",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                },
                {
                    "Fn::Equals": [
                        "7",
                        {
                            "Ref": "HostCount"
                        }
                    ]
                }
            ]
        },
        "AutoRecoveryWorker1": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        "Yes",
                        {
                            "Ref": "AutoRecovery"
                        }
                    ]
                },
                {
                    "Condition": "TwoOrMoreNodes"
                }
            ]
        },
        "AutoRecoveryWorker2": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        "Yes",
                        {
                            "Ref": "AutoRecovery"
                        }
                    ]
                },
                {
                    "Condition": "ThreeOrMoreNodes"
                }
            ]
        },
        "AutoRecoveryWorker3": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        "Yes",
                        {
                            "Ref": "AutoRecovery"
                        }
                    ]
                },
                {
                    "Condition": "FourOrMoreNodes"
                }
            ]
        },
        "AutoRecoveryWorker4": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        "Yes",
                        {
                            "Ref": "AutoRecovery"
                        }
                    ]
                },
                {
                    "Condition": "FiveOrMoreNodes"
                }
            ]
        },
        "AutoRecoveryWorker5": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        "Yes",
                        {
                            "Ref": "AutoRecovery"
                        }
                    ]
                },
                {
                    "Condition": "SixOrMoreNodes"
                }
            ]
        },
        "AutoRecoveryMaster": {
            "Fn::Equals": [
                {
                    "Ref": "AutoRecovery"
                },
                "Yes"
            ]
        },
        "NeedWindowsInstance": {
            "Fn::Equals": [
                {
                    "Ref": "InstallRDPInstance"
                },
                "Yes"
            ]
        },
        "PlacementGroupNull": {
            "Fn::Equals": [
                {
                    "Ref": "PlacementGroupName"
                },
                ""
            ]
        },
        "UseEncryption": {
            "Fn::Equals": [
                {
                    "Ref": "Encryption"
                },
                "Yes"
            ]
        },
        "IfDedicatedHost": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        ""
                    ]
                }
            ]
        },
        "IfLogging": {
            "Fn::Equals": [
                {
                    "Ref": "EnableLogging"
                },
                "Yes"
            ]
        },
        "IfAppSubnet": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "ApplicationCIDR"
                        },
                        "0.0.0.0/0"
                    ]
                }
            ]
        },
        "IfUseSLES": {
            "Fn::Equals": [
                {
                    "Fn::FindInMap": [
                        "SAPAMINameMap",
                        {
                            "Ref": "MyOS"
                        },
                        "Code"
                    ]
                },
                "SLES"
            ]
        }
    },
    "Mappings": {
        "SAPAMINameMap": {
            "Red-Hat-Enterprise-Linux-7.5-For-SAP-HVM": {
                "Code": "RHEL75SAPHVM"
            },
            "Red-Hat-Enterprise-Linux-7.4-For-SAP-HA-US-HVM": {
                "Code": "RHEL74SAPHAUSHVM"
            },
            "Red-Hat-Enterprise-Linux-7.5-For-SAP-HA-US-HVM": {
                "Code": "RHEL75SAPHAUSHVM"
            },
            "Red-Hat-Enterprise-Linux-7.6-For-SAP-HA-US-HVM": {
                "Code": "RHEL76SAPHAUSHVM"
            },
            "SuSE-Linux-11-SP4-HVM": {
                "Code": "SLES11SP4HVM"
            },
            "SuSE-Linux-12-HVM": {
                "Code": "SLES12HVM"
            },
            "SuSE-Linux-12-SP1-HVM": {
                "Code": "SLES12SP1HVM"
            },
            "SuSE-Linux-12-SP2-HVM": {
                "Code": "SLES12SP2HVM"
            },
            "SuSE-Linux-12-SP3-HVM": {
                "Code": "SLES12SP3HVM"
            },
            "SuSE-Linux-12-SP4-HVM": {
                "Code": "SLES12SP4HVM"
            },
            "SuSE-Linux-15-HVM": {
                "Code": "SLES15HVM"
            },
            "SuSE-Linux-12-SP2-For-SAP-HVM": {
                "Code": "SLES12SP2SAPHVM"
            },
            "SuSE-Linux-12-SP3-For-SAP-HVM": {
                "Code": "SLES12SP3SAPHVM"
            },
            "SuSE-Linux-12-SP4-For-SAP-HVM": {
                "Code": "SLES12SP4SAPHVM"
            },
            "SuSE-Linux-15-For-SAP-HVM": {
                "Code": "SLES15SAPHVM"
            },
            "SuSE-Linux-12-SP1-For-SAP-BYOS-HVM": {
                "Code": "SLES12SP1SAPBYOSHVM"
            },
            "SuSE-Linux-12-SP2-For-SAP-BYOS-HVM": {
                "Code": "SLES12SP2SAPBYOSHVM"
            },
            "SuSE-Linux-12-SP3-For-SAP-BYOS-HVM": {
                "Code": "SLES12SP3SAPBYOSHVM"
            },
            "SuSE-Linux-12-SP4-For-SAP-BYOS-HVM": {
                "Code": "SLES12SP4SAPBYOSHVM"
            },
            "SuSE-Linux-15-For-SAP-BYOS-HVM": {
                "Code": "SLES15SAPBYOSHVM"
            }
        },
        "AWSAMIRegionMap": {
            "AMI": {
                "RHEL75SAPHVM": "SAP-7.5_HVM_GA-20180911-x86_64-0-Hourly2-GP2-b676039c-a4f8-4be7-9866-c804b1ade684-ami-01e5a531ae8d3d976.4",
                "RHEL74SAPHAUSHVM": "SAPHAE4S-7.4_HVM-20181108-x86_64-2-Hourly2-GP2-5cca0aac-b678-4e46-80e2-344cfed26a62-ami-0c3e857ffeab71ac5.4",
                "RHEL75SAPHAUSHVM": "SAPHAEUS-7.5_HVM-20181108-x86_64-2-Hourly2-GP2-5cca0aac-b678-4e46-80e2-344cfed26a62-ami-081c0b27c08752050.4",
                "RHEL76SAPHAUSHVM": "SAP-7.6_E4S_HA_US_HVM-20190221-x86_64-2-Hourly2-GP2-5cca0aac-b678-4e46-80e2-344cfed26a62-ami-0e49c67162a6956e9.4",
                "SLES11SP4HVM": "suse-sles-11-sp4-v20180816-hvm-ssd-x86_64",
                "SLES12SP1HVM": "suse-sles-12-sp1-v20161021-hvm-ssd-x86_64",
                "SLES12SP2HVM": "suse-sles-12-sp2-v20170620-hvm-ssd-x86_64",
                "SLES12SP3HVM": "suse-sles-12-sp3-v20181004-hvm-ssd-x86_64",
                "SLES12SP4HVM": "suse-sles-12-sp4-v20190314-hvm-ssd-x86_64",
                "SLES15HVM": "suse-sles-15-v20180806-hvm-ssd-x86_64",
                "SLES12SP2SAPHVM": "suse-sles-sap-12-sp2-v20180706-hvm-ssd-x86_64-e3458d64-5c36-4577-bd98-0ee19e3eaeec-ami-3ac5ea45.4",
                "SLES12SP3SAPHVM": "suse-sles-sap-12-sp3-v20180814-hvm-ssd-x86_64-da7aa9c3-97db-4573-89a6-7fe7348d90b0-ami-0df5b06332b816a8e.4",
                "SLES12SP4SAPHVM": "suse-sles-sap-12-sp4-v20181212-hvm-ssd-x86_64-8f7bb679-fb90-4446-aa80-9b6cfd834710-ami-015bf44384c484ccb.4",
                "SLES15SAPHVM": "suse-sles-sap-15-v20180806-hvm-ssd-x86_64-6a4bc5af-a084-4f96-8402-5cd249e9091d-ami-06aee2e6db735d4f4.4",
                "SLES12SP1SAPBYOSHVM": "suse-sles-sap-12-sp1-byos-v20170123-hvm-ssd-x86_64",
                "SLES12SP2SAPBYOSHVM": "suse-sles-sap-12-sp2-byos-v20180816-hvm-ssd-x86_64",
                "SLES12SP3SAPBYOSHVM": "suse-sles-sap-12-sp3-byos-v20180814-hvm-ssd-x86_64",
                "SLES12SP4SAPBYOSHVM": "suse-sles-sap-12-sp4-byos-v20190314-hvm-ssd-x86_64",
                "SLES15SAPBYOSHVM": "suse-sles-sap-15-byos-v20180816-hvm-ssd-x86_64",
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.05.15"
            },
            "ap-northeast-1": {
                "RHEL75SAPHVM": "ami-0ce47f39a0a21f61e",
                "RHEL74SAPHAUSHVM": "ami-0033f0d7d626f014f",
                "RHEL75SAPHAUSHVM": "ami-08d13c2bb0c07e8e3",
                "RHEL76SAPHAUSHVM": "ami-092eb64b443171d7e",
                "SLES11SP4HVM": "ami-0c6f393bb8d20159a",
                "SLES12SP1HVM": "ami-d94fe9b8",
                "SLES12SP1SAPBYOSHVM": "ami-63473c04",
                "SLES12SP2HVM": "ami-a07560c7",
                "SLES12SP2SAPBYOSHVM": "ami-08284f006764f604d",
                "SLES12SP2SAPHVM": "ami-0dafd3cd1e6f7ab55",
                "SLES12SP3HVM": "ami-050f5170e43607893",
                "SLES12SP3SAPBYOSHVM": "ami-015b1feb4b30a3040",
                "SLES12SP3SAPHVM": "ami-0e2702a1d0201067e",
                "SLES12SP4HVM": "ami-0878f92c2d18d7474",
                "SLES12SP4SAPBYOSHVM": "ami-010835c76895df4af",
                "SLES12SP4SAPHVM": "ami-0880b2aee7a4236db",
                "SLES15HVM": "ami-056ac8ad44e6a7e1f",
                "SLES15SAPHVM": "ami-0174751ba72376df1",
                "SLES15SAPBYOSHVM": "ami-0792bb0aaa616f9c9",
                "WS2012R2": "ami-0fc17fdf7145490d4"
            },
            "ap-northeast-2": {
                "RHEL75SAPHVM": "ami-06db50be1842d6b9a",
                "RHEL74SAPHAUSHVM": "ami-0450ac5a5b079fa41",
                "RHEL75SAPHAUSHVM": "ami-0521b6ebbf151e58a",
                "RHEL76SAPHAUSHVM": "ami-04384779af6b49648",
                "SLES11SP4HVM": "ami-00e7068674ce94853",
                "SLES12SP1HVM": "ami-1ced3972",
                "SLES12SP1SAPBYOSHVM": "ami-b5f928db",
                "SLES12SP2HVM": "ami-86d00fe8",
                "SLES12SP2SAPBYOSHVM": "ami-0cb72d1d6fb9e6b4e",
                "SLES12SP2SAPHVM": "ami-01ac90a30afcb8662",
                "SLES12SP3HVM": "ami-00728f974fb4b3f2a",
                "SLES12SP3SAPBYOSHVM": "ami-07985cf93612b4a01",
                "SLES12SP3SAPHVM": "ami-0332cc351e9b34c56",
                "SLES12SP4HVM": "ami-002559f4034e04afe",
                "SLES12SP4SAPBYOSHVM": "ami-0784273b0798b2f4f",
                "SLES12SP4SAPHVM": "ami-0146dc4a108cc9614",
                "SLES15HVM": "ami-0f81fff879bafe6b8",
                "SLES15SAPHVM": "ami-025bc5b179c7689f8",
                "SLES15SAPBYOSHVM": "ami-0268aae2b7e421b07",
                "WS2012R2": "ami-0b556f49b82ce9aa4"
            },
            "ap-south-1": {
                "RHEL75SAPHVM": "ami-0afdd099cb4cacadf",
                "RHEL74SAPHAUSHVM": "ami-0167ffd4ebf2c034a",
                "RHEL75SAPHAUSHVM": "ami-029b2a9859384e194",
                "RHEL76SAPHAUSHVM": "ami-015afb3901ab40784",
                "SLES11SP4HVM": "ami-0bdb8670f707feabd",
                "SLES12SP1HVM": "ami-985226f7",
                "SLES12SP1SAPBYOSHVM": "ami-93c9bffc",
                "SLES12SP2HVM": "ami-62e39c0d",
                "SLES12SP2SAPBYOSHVM": "ami-0e70efddb6f14b5d3",
                "SLES12SP2SAPHVM": "ami-06b754d754ed8c43c",
                "SLES12SP3HVM": "ami-0c1453eb750c7a5ab",
                "SLES12SP3SAPBYOSHVM": "ami-038f5eec5240991fb",
                "SLES12SP3SAPHVM": "ami-0dbd17f897682979a",
                "SLES12SP4HVM": "ami-0db518a8b39b20e05",
                "SLES12SP4SAPBYOSHVM": "ami-003c54b69e4fa1de5",
                "SLES12SP4SAPHVM": "ami-0704c94f703b9e324",
                "SLES15HVM": "ami-01be89269d32f2a16",
                "SLES15SAPHVM": "ami-01a38e853e458e7e4",
                "SLES15SAPBYOSHVM": "ami-03e3f217995931db6",
                "WS2012R2": "ami-064338cb31cb626f9"
            },
            "ap-southeast-1": {
                "RHEL75SAPHVM": "ami-08fc0673d9d83037a",
                "RHEL74SAPHAUSHVM": "ami-037dc0ec600ed1888",
                "RHEL75SAPHAUSHVM": "ami-05c8713dd14fa6156",
                "RHEL76SAPHAUSHVM": "ami-0469d4463a41ed704",
                "SLES11SP4HVM": "ami-021e49892145e1949",
                "SLES12SP1HVM": "ami-163d9b75",
                "SLES12SP1SAPBYOSHVM": "ami-ab0aa0c8",
                "SLES12SP2HVM": "ami-f1078a92",
                "SLES12SP2SAPBYOSHVM": "ami-0518ff9866eadc68b",
                "SLES12SP2SAPHVM": "ami-00e6fba1cebcf3560",
                "SLES12SP3HVM": "ami-06190570cf455031a",
                "SLES12SP3SAPBYOSHVM": "ami-0c0801486ca809514",
                "SLES12SP3SAPHVM": "ami-0d75b5c8dd39d157d",
                "SLES12SP4HVM": "ami-0eeb8d6d88b0e651d",
                "SLES12SP4SAPBYOSHVM": "ami-036b074ebaf8a7a15",
                "SLES12SP4SAPHVM": "ami-0882cc7355a3ec5f9",
                "SLES15HVM": "ami-070356c21596ddc67",
                "SLES15SAPHVM": "ami-0b312f69647b63e0e",
                "SLES15SAPBYOSHVM": "ami-0fb42054cd76f9f53",
                "WS2012R2": "ami-0c7412dbeb3811092"
            },
            "ap-southeast-2": {
                "RHEL75SAPHVM": "ami-0a8af8e94f35319ba",
                "RHEL74SAPHAUSHVM": "ami-0c5b5357081c68218",
                "RHEL75SAPHAUSHVM": "ami-0df9dbd4828ca1166",
                "RHEL76SAPHAUSHVM": "ami-0356eb53cb824dc7e",
                "SLES11SP4HVM": "ami-0c966540b7cd84b4b",
                "SLES12SP1HVM": "ami-e32b1680",
                "SLES12SP1SAPBYOSHVM": "ami-460d0a25",
                "SLES12SP2HVM": "ami-197a6a7a",
                "SLES12SP2SAPBYOSHVM": "ami-0ab0b11afd04e6f03",
                "SLES12SP2SAPHVM": "ami-01163d2bc0933a2e7",
                "SLES12SP3HVM": "ami-0ccbc8eb74e84b8bd",
                "SLES12SP3SAPBYOSHVM": "ami-08d8d62d140df5f26",
                "SLES12SP3SAPHVM": "ami-0c355880aff41dd5b",
                "SLES12SP4HVM": "ami-057b1636ab22a9258",
                "SLES12SP4SAPBYOSHVM": "ami-0bbddbd10628600eb",
                "SLES12SP4SAPHVM": "ami-085f0e4b00a1fff98",
                "SLES15HVM": "ami-0c4245381c67efb39",
                "SLES15SAPHVM": "ami-0c995271948cbb736",
                "SLES15SAPBYOSHVM": "ami-056fe47614a9a42ae",
                "WS2012R2": "ami-08e9a6cc5e9ea17e9"
            },
            "ca-central-1": {
                "RHEL75SAPHVM": "ami-010ef109ec0f43d6d",
                "RHEL74SAPHAUSHVM": "ami-06e94c1c4cd754fe5",
                "RHEL75SAPHAUSHVM": "ami-0173442cbf82d3d9f",
                "RHEL76SAPHAUSHVM": "ami-0c720e8ded4a6c5b0",
                "SLES11SP4HVM": "ami-0a89186e8d2b82307",
                "SLES12SP1SAPBYOSHVM": "ami-2fd4694b",
                "SLES12SP2HVM": "ami-d5d56ab1",
                "SLES12SP2SAPBYOSHVM": "ami-0a2961e55928d327f",
                "SLES12SP2SAPHVM": "ami-0efcd8732b1309315",
                "SLES12SP3HVM": "ami-0f7c9a39e20a9adea",
                "SLES12SP3SAPBYOSHVM": "ami-01560bcdbe2e731d5",
                "SLES12SP3SAPHVM": "ami-0141f65ef9ecc2dde",
                "SLES12SP4HVM": "ami-09adcab1ad14acc87",
                "SLES12SP4SAPBYOSHVM": "ami-0dfe4c179514e202b",
                "SLES12SP4SAPHVM": "ami-0912552684a960126",
                "SLES15HVM": "ami-0c97d9b588207dad6",
                "SLES15SAPHVM": "ami-07d033739f020a039",
                "SLES15SAPBYOSHVM": "ami-06d886246b429061e",
                "WS2012R2": "ami-0cf495517ac09e901"
            },
            "eu-central-1": {
                "RHEL75SAPHVM": "ami-0841ec948df565271",
                "RHEL74SAPHAUSHVM": "ami-0a38565bcb3243da0",
                "RHEL75SAPHAUSHVM": "ami-08f1018e2a0f26daa",
                "RHEL76SAPHAUSHVM": "ami-00e9db6661b279d3f",
                "SLES11SP4HVM": "ami-0f032693ef4319469",
                "SLES12SP1HVM": "ami-59699036",
                "SLES12SP1SAPBYOSHVM": "ami-4b6ba424",
                "SLES12SP2HVM": "ami-984ee9f7",
                "SLES12SP2SAPBYOSHVM": "ami-02df24b4c89e9e3e7",
                "SLES12SP2SAPHVM": "ami-06865b212989f946a",
                "SLES12SP3HVM": "ami-0fa9bde3f3d40e5ae",
                "SLES12SP3SAPBYOSHVM": "ami-028e45d17af35e5f5",
                "SLES12SP3SAPHVM": "ami-08be7ee93e3c17eeb",
                "SLES12SP4HVM": "ami-030c9846e1fc0f9fe",
                "SLES12SP4SAPBYOSHVM": "ami-0bd748f69a1b0f3f6",
                "SLES12SP4SAPHVM": "ami-06998d657605ecffc",
                "SLES15HVM": "ami-05dfd265ea534a3e9",
                "SLES15SAPHVM": "ami-0823a4f2cd6f5ff6c",
                "SLES15SAPBYOSHVM": "ami-0a514e2b7af1c84e5",
                "WS2012R2": "ami-0033b3ecc3bf13cd4"
            },
            "eu-west-1": {
                "RHEL75SAPHVM": "ami-04a014a7d626b3fd8",
                "RHEL74SAPHAUSHVM": "ami-0af3e97778546f34b",
                "RHEL75SAPHAUSHVM": "ami-0dfa47f27b3bf9922",
                "RHEL76SAPHAUSHVM": "ami-0e39a11a4694e879d",
                "SLES11SP4HVM": "ami-0a40ff0e3202c10e1",
                "SLES12SP1HVM": "ami-b197d9c2",
                "SLES12SP1SAPBYOSHVM": "ami-81025de7",
                "SLES12SP2HVM": "ami-f5776f93",
                "SLES12SP2SAPBYOSHVM": "ami-0b710f90881364c81",
                "SLES12SP2SAPHVM": "ami-0e25482b9d80278a8",
                "SLES12SP3HVM": "ami-06bc7889ee68f279e",
                "SLES12SP3SAPBYOSHVM": "ami-0deef8411e9567df2",
                "SLES12SP3SAPHVM": "ami-077fcc421d993a777",
                "SLES12SP4HVM": "ami-065b4eeb903b89038",
                "SLES12SP4SAPBYOSHVM": "ami-0cf4d8eabbea68cad",
                "SLES12SP4SAPHVM": "ami-07d5a83d70cf1e29b",
                "SLES15HVM": "ami-0a58a1b152ba55f1d",
                "SLES15SAPHVM": "ami-0fda5e832418d2123",
                "SLES15SAPBYOSHVM": "ami-0d001a8c828e1ec55",
                "WS2012R2": "ami-0d0ebc27444cd1f93"
            },
            "eu-west-2": {
                "RHEL75SAPHVM": "ami-070b8ef548695f653",
                "RHEL74SAPHAUSHVM": "ami-005b4b0f0decc3229",
                "RHEL75SAPHAUSHVM": "ami-0d24c16fec55a94f4",
                "RHEL76SAPHAUSHVM": "ami-0aeabd574eb91aa0b",
                "SLES11SP4HVM": "ami-06a87787f9466fa7b",
                "SLES12SP1SAPBYOSHVM": "ami-b2a1abd6",
                "SLES12SP2HVM": "ami-d97066bd",
                "SLES12SP2SAPBYOSHVM": "ami-09d6d16849bddb5e0",
                "SLES12SP2SAPHVM": "ami-0ff1c44b6254be35f",
                "SLES12SP3HVM": "ami-0eb4bd78fba2f32e4",
                "SLES12SP3SAPBYOSHVM": "ami-0ed60b9c723f94a33",
                "SLES12SP3SAPHVM": "ami-0c201f1c455ac4823",
                "SLES12SP4HVM": "ami-02cb6d1ccf5327f24",
                "SLES12SP4SAPBYOSHVM": "ami-07194b14ca4764334",
                "SLES12SP4SAPHVM": "ami-08d276a6abd4bc4e5",
                "SLES15HVM": "ami-01497522185aaa4ee",
                "SLES15SAPHVM": "ami-060b2e1e236b73f00",
                "SLES15SAPBYOSHVM": "ami-03f2f32a0229f45dd",
                "WS2012R2": "ami-0463e294aadede163"
            },
            "eu-west-3": {
                "RHEL75SAPHVM": "ami-0b9d6c1ae0e94e8a9",
                "RHEL74SAPHAUSHVM": "ami-01f114d111cc45831",
                "RHEL75SAPHAUSHVM": "ami-0d0e00736cd23369b",
                "RHEL76SAPHAUSHVM": "ami-0c1cf4ecf66e353e8",
                "SLES11SP4HVM": "ami-036671c4b09355867",
                "SLES12SP1SAPBYOSHVM": "ami-cf992eb2",
                "SLES12SP2SAPBYOSHVM": "ami-07715d8785ab4be9a",
                "SLES12SP2SAPHVM": "ami-008bcc706b62df0fb",
                "SLES12SP3HVM": "ami-07b20332d54ed21e8",
                "SLES12SP3SAPBYOSHVM": "ami-0e241f56a1dac4696",
                "SLES12SP3SAPHVM": "ami-03c8cb58d31831671",
                "SLES12SP4HVM": "ami-0e6bd2a6c500d40ff",
                "SLES12SP4SAPBYOSHVM": "ami-08460c948336b270c",
                "SLES12SP4SAPHVM": "ami-0a40138656742f075",
                "SLES15HVM": "ami-0f238bd4c6fdbefb0",
                "SLES15SAPHVM": "ami-0a10a689c47a8a6af",
                "SLES15SAPBYOSHVM": "ami-0c7e819f30af46768",
                "WS2012R2": "ami-0094d544cbdebcb79"
            },
            "sa-east-1": {
                "RHEL75SAPHVM": "ami-0a9ee704defec0845",
                "RHEL74SAPHAUSHVM": "ami-04450cf66c6bf5f42",
                "RHEL75SAPHAUSHVM": "ami-0fb635cae4f8c6028",
                "RHEL76SAPHAUSHVM": "ami-0c60751a062c4295b",
                "SLES11SP4HVM": "ami-00134f83806a20f4a",
                "SLES12SP1HVM": "ami-ce3aa7a2",
                "SLES12SP1SAPBYOSHVM": "ami-eb543187",
                "SLES12SP2HVM": "ami-52a4cf3e",
                "SLES12SP2SAPBYOSHVM": "ami-0c7bf8beb8998329b",
                "SLES12SP2SAPHVM": "ami-05d575f869032b973",
                "SLES12SP3HVM": "ami-0188b2a9dc0ae5f44",
                "SLES12SP3SAPBYOSHVM": "ami-063007da56fe6ed90",
                "SLES12SP3SAPHVM": "ami-06d49460112eae218",
                "SLES12SP4HVM": "ami-0fd7b4d69dfcc72ee",
                "SLES12SP4SAPBYOSHVM": "ami-0b8234371cf7e94a9",
                "SLES12SP4SAPHVM": "ami-007f7ce65e71872dc",
                "SLES15HVM": "ami-0772af912976aa692",
                "SLES15SAPHVM": "ami-0867633aaf95b8b45",
                "SLES15SAPBYOSHVM": "ami-0ab56c32bb45cf598",
                "WS2012R2": "ami-03fff00bfd663db28"
            },
            "us-east-1": {
                "RHEL75SAPHVM": "ami-05cd8f1730c8df7dc",
                "RHEL74SAPHAUSHVM": "ami-0f458a41a777ef497",
                "RHEL75SAPHAUSHVM": "ami-0d81d8964ccf8bdef",
                "RHEL76SAPHAUSHVM": "ami-054a9dc6c144331a0",
                "SLES11SP4HVM": "ami-05b47745292b62b8e",
                "SLES12SP1HVM": "ami-1eeab909",
                "SLES12SP1SAPBYOSHVM": "ami-7dd2256b",
                "SLES12SP2HVM": "ami-8fac8399",
                "SLES12SP2SAPBYOSHVM": "ami-0f62824fdf8b862ad",
                "SLES12SP2SAPHVM": "ami-0b893cda91abd0751",
                "SLES12SP3HVM": "ami-03adb8813ffd80f0b",
                "SLES12SP3SAPBYOSHVM": "ami-0a8a9f2f6e49c913a",
                "SLES12SP3SAPHVM": "ami-0bb450ed939c9dcc6",
                "SLES12SP4HVM": "ami-043eebeabcc4e3d35",
                "SLES12SP4SAPBYOSHVM": "ami-0872ec606ae56271a",
                "SLES12SP4SAPHVM": "ami-01c1cef341b39f1b6",
                "SLES15HVM": "ami-0b1764f3d7d2e2316",
                "SLES15SAPHVM": "ami-034a4657781cac699",
                "SLES15SAPBYOSHVM": "ami-05dc98917c7287eed",
                "WS2012R2": "ami-02c1e2d2763cbee64"
            },
            "us-east-2": {
                "RHEL75SAPHVM": "ami-0b1439383ea0d0c87",
                "RHEL74SAPHAUSHVM": "ami-0cfab53d572d62388",
                "RHEL75SAPHAUSHVM": "ami-03527d73c82921684",
                "RHEL76SAPHAUSHVM": "ami-02bf9176554430b2a",
                "SLES11SP4HVM": "ami-0d984fc673fefcb8c",
                "SLES12SP1HVM": "ami-85075de0",
                "SLES12SP1SAPBYOSHVM": "ami-ac2401c9",
                "SLES12SP2HVM": "ami-f990b69c",
                "SLES12SP2SAPBYOSHVM": "ami-09766ec801f4afc73",
                "SLES12SP2SAPHVM": "ami-074016f1dd425fcc8",
                "SLES12SP3HVM": "ami-0479b39f2d07530fb",
                "SLES12SP3SAPBYOSHVM": "ami-01904d8e5200cf09a",
                "SLES12SP3SAPHVM": "ami-0cf589eb51e0dc3c3",
                "SLES12SP4HVM": "ami-00c2a324f2cf48f09",
                "SLES12SP4SAPBYOSHVM": "ami-0835dd9afdc5d1adf",
                "SLES12SP4SAPHVM": "ami-0c19dc88e07028af1",
                "SLES15HVM": "ami-05ea824317ffc0c20",
                "SLES15SAPHVM": "ami-0ad6708faee9090ba",
                "SLES15SAPBYOSHVM": "ami-0ed400a7573344904",
                "WS2012R2": "ami-00133f78ad56a5c91"
            },
            "us-west-1": {
                "RHEL75SAPHVM": "ami-015c680b92b8f8e04",
                "RHEL74SAPHAUSHVM": "ami-0bce690da8c3f9573",
                "RHEL75SAPHAUSHVM": "ami-09294cb9917bcb535",
                "RHEL76SAPHAUSHVM": "ami-05163897ae5e64145",
                "SLES11SP4HVM": "ami-07db9616cb48eef6e",
                "SLES12SP1HVM": "ami-a12962c1",
                "SLES12SP1SAPBYOSHVM": "ami-4a9dcf2a",
                "SLES12SP2HVM": "ami-32c8e552",
                "SLES12SP2SAPBYOSHVM": "ami-098c273ab19889025",
                "SLES12SP2SAPHVM": "ami-0c7907925cd713416",
                "SLES12SP3HVM": "ami-05561250b8346a707",
                "SLES12SP3SAPBYOSHVM": "ami-06376c57c523fcc9a",
                "SLES12SP3SAPHVM": "ami-084d00e0a467c9d59",
                "SLES12SP4HVM": "ami-0a33332e25e6cc1a7",
                "SLES12SP4SAPBYOSHVM": "ami-0c916e85bd909a6ec",
                "SLES12SP4SAPHVM": "ami-0472ff5210a99fab9",
                "SLES15HVM": "ami-00e34a7624e5a7107",
                "SLES15SAPHVM": "ami-0867f45fee8435a19",
                "SLES15SAPBYOSHVM": "ami-056bad2244d8748aa",
                "WS2012R2": "ami-0320422c6ac6b0f39"
            },
            "us-west-2": {
                "RHEL75SAPHVM": "ami-07894ab0a4a5e8612",
                "RHEL74SAPHAUSHVM": "ami-050890ecc1851620c",
                "RHEL75SAPHAUSHVM": "ami-07f49a6a84d94211e",
                "RHEL76SAPHAUSHVM": "ami-0062814abe5ca3369",
                "SLES11SP4HVM": "ami-09a652af9ed1e0dad",
                "SLES12SP1HVM": "ami-7fa2061f",
                "SLES12SP1SAPBYOSHVM": "ami-68922c08",
                "SLES12SP2HVM": "ami-da786da3",
                "SLES12SP2SAPBYOSHVM": "ami-0875f1dffbdffdc12",
                "SLES12SP2SAPHVM": "ami-002aa576641eeb53a",
                "SLES12SP3HVM": "ami-015ee9a0398544b09",
                "SLES12SP3SAPBYOSHVM": "ami-0ced5e921dbeadb47",
                "SLES12SP3SAPHVM": "ami-0898193014586cdd4",
                "SLES12SP4HVM": "ami-00589b0e26f1ba15b",
                "SLES12SP4SAPBYOSHVM": "ami-0e7301dd87f35c5ef",
                "SLES12SP4SAPHVM": "ami-045b62b7eebfe2d55",
                "SLES15HVM": "ami-0f1e3b3fb0fec0361",
                "SLES15SAPHVM": "ami-0ca00995da6bbdea0",
                "SLES15SAPBYOSHVM": "ami-0923cedaa89313407",
                "WS2012R2": "ami-0bfd72d59f05f83f0"
            }
        }
    },
    "Outputs": {
        "HANAMasterInstanceIP": {
            "Description": "HANA Master Node IP Address",
            "Value": {
                "Fn::GetAtt": [
                    "HANAMasterInstance",
                    "PrivateIp"
                ]
            }
        },
        "HANAMasterSecurityGroup": {
            "Description": "Security Group created for the SAP HANA Master node",
            "Value": {
                "Fn::GetAtt": [
                    "HANASecurityGroup",
                    "GroupId"
                ]
            }
        },
        "HANAMasterInstanceRole": {
            "Description": "Instance Role Name for HANA Instance",
            "Value": {
                "Ref": "HANAIAMRole"
            }
        },
        "HANAMasterInstanceId": {
            "Description": "Instance Id for HANA Instance",
            "Value": {
                "Ref": "HANAMasterInstance"
            }
        }
    },
    "Resources": {
        "Trail": {
            "DependsOn": [
                "BucketPolicy"
            ],
            "Type": "AWS::CloudTrail::Trail",
            "Condition": "IfLogging",
            "Properties": {
                "IncludeGlobalServiceEvents": "true",
                "S3BucketName": {
                    "Ref": "CloudTrailS3Bucket"
                },
                "SnsTopicName": {
                    "Ref": "AWS::NoValue"
                },
                "IsLogging": "true"
            }
        },
        "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Condition": "IfLogging",
            "Properties": {
                "Bucket": {
                    "Ref": "CloudTrailS3Bucket"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AWSCloudTrailAclCheck20150319",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Action": "s3:GetBucketAcl",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "CloudTrailS3Bucket"
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "Sid": "AWSCloudTrailWrite20150319",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Action": "s3:PutObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "CloudTrailS3Bucket"
                                        },
                                        "/AWSLogs/",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringEquals": {
                                    "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                            }
                        },
                        {
                            "Sid": "AWSConfigBucketPermissionsCheck",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "config.amazonaws.com"
                                ]
                            },
                            "Action": "s3:GetBucketAcl",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "CloudTrailS3Bucket"
                                        }
                                    ]
                                ]
                            }
                        },
                        {
                            "Sid": " AWSConfigBucketDelivery",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "config.amazonaws.com"
                                ]
                            },
                            "Action": "s3:PutObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "CloudTrailS3Bucket"
                                        },
                                        "/AWSLogs/",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "/Config/*"
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringEquals": {
                                    "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "ConfigRecorder": {
            "DependsOn": [
                "AWSConfigIAMRole"
            ],
            "Type": "AWS::Config::ConfigurationRecorder",
            "Condition": "IfLogging",
            "Properties": {
                "Name": "HANAQuickStart-ConfigRecord",
                "RecordingGroup": {
                    "ResourceTypes": [
                        "AWS::S3::Bucket",
                        "AWS::CloudTrail::Trail",
                        "AWS::EC2::Instance",
                        "AWS::EC2::SecurityGroup",
                        "AWS::EC2::NetworkInterface",
                        "AWS::EC2::Volume",
                        "AWS::EC2::VPC",
                        "AWS::EC2::Subnet",
                        "AWS::EC2::RouteTable",
                        "AWS::EC2::NetworkAcl"
                    ]
                },
                "RoleARN": {
                    "Fn::GetAtt": [
                        "AWSConfigIAMRole",
                        "Arn"
                    ]
                }
            }
        },
        "DeliveryChannel": {
            "Type": "AWS::Config::DeliveryChannel",
            "Condition": "IfLogging",
            "Properties": {
                "ConfigSnapshotDeliveryProperties": {
                    "DeliveryFrequency": "One_Hour"
                },
                "S3BucketName": {
                    "Ref": "CloudTrailS3Bucket"
                }
            }
        },
        "AWSConfigIAMRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "IfLogging",
            "Properties": {
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSConfigRole"
                ],
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "config.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "DeploymentInterruptQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "DelaySeconds": 0,
                "VisibilityTimeout": 0
            }
        },
        "HANAMasterInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": "Network Interface for HANA Master",
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "GroupSet": [
                    {
                        "Ref": "HANASecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker1Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "TwoOrMoreNodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 1",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker2Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "ThreeOrMoreNodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 2",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker3Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "FourOrMoreNodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 3",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker4Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "FiveOrMoreNodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 4",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANAWorker5Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Condition": "SixOrMoreNodes",
            "Properties": {
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Description": "Interface for HANA Worker 5",
                "GroupSet": [
                    {
                        "Ref": "HANASlaveSG"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANASecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable external access to the HANA Master and allow communication from slave instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "1",
                        "ToPort": "65535"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "111",
                        "ToPort": "111"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "2049",
                        "ToPort": "2049"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "4000",
                        "ToPort": "4002"
                    },
                    {
                        "IpProtocol": "icmp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "-1",
                        "ToPort": "-1"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "14"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "41"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "44"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "80",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "80",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "09"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "09"
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "43",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "43",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    ""
                                ]
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8080",
                        "ToPort": "8080"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8443",
                        "ToPort": "8443"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1128",
                        "ToPort": "1128"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1129",
                        "ToPort": "1129"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "22",
                        "ToPort": "22"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "1",
                        "ToPort": "65535"
                    }
                ]
            }
        },
        "HANASecurityGroupUpdate": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "IfAppSubnet",
            "Properties": {
                "CidrIp": {
                    "Ref": "ApplicationCIDR"
                },
                "Description": "SAP Client Traffic",
                "IpProtocol": "tcp",
                "FromPort": {
                    "Fn::Join": [
                        "",
                        [
                            "3",
                            {
                                "Ref": "SAPInstanceNum"
                            },
                            "13"
                        ]
                    ]
                },
                "ToPort": {
                    "Fn::Join": [
                        "",
                        [
                            "3",
                            {
                                "Ref": "SAPInstanceNum"
                            },
                            "17"
                        ]
                    ]
                },
                "GroupId": {
                    "Ref": "HANASecurityGroup"
                }
            }
        },
        "HANASlaveSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "TwoOrMoreNodes",
            "Properties": {
                "GroupDescription": "Enable communication between the master and slave instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "13"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "5",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "14"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "15"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "ToPort": {
                            "Fn::Join": [
                                "",
                                [
                                    "3",
                                    {
                                        "Ref": "SAPInstanceNum"
                                    },
                                    "17"
                                ]
                            ]
                        },
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1128",
                        "ToPort": "1129",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8443",
                        "ToPort": "8443",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "HANAIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com",
                                    "ssm.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
                ],
                "Policies": [
                    {
                        "PolicyName": "HANA-QuickStart",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:GetBucketLocation",
                                        "ec2:Describe*",
                                        "ec2:ModifyInstanceAttribute",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "cloudwatch:GetMetricStatistics",
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:*",
                                        "dynamodb:*",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:GetItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:UpdateTable",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStackResources",
                                        "cloudformation:GetTemplate",
                                        "cloudformation:List*"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "HANAIAMProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "HANAIAMRole"
                    }
                ]
            }
        },
        "WaitForHANAInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "HANAMasterInstance",
            "Properties": {
                "Handle": {
                    "Ref": "WaitForMasterInstallWaitHandle"
                },
                "Timeout": "43200"
            }
        },
        "WaitForMasterInstallWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        },
        "RDPInstanceRootRole": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*",
                                        "ec2:Describe*",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:DeleteVolume",
                                        "ec2:RunInstances",
                                        "ec2:StartInstances",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreatePlacementGroup",
                                        "ec2:CreateSnapshot"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "sqs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStack",
                                        "cloudformation:EstimateTemplateCost",
                                        "cloudformation:ValidateTemplate",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStackResources",
                                        "cloudformation:DescribeStacks"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateRole"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PutRolePolicy"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateInstanceProfile"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:AddRoleToInstanceProfile"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:RevokeSecurityGroupEgress"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AuthorizeSecurityGroupEgress"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AuthorizeSecurityGroupIngress"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateNetworkInterface"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:ModifyNetworkInterfaceAttribute"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RDPProfile": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RDPInstanceRootRole"
                    }
                ]
            }
        },
        "RDPSecurityGroup": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "RDP Instance security group",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "RDPEIP": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "RDPInterface": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "DMZSubnet"
                },
                "Description": "Interface for RDP Instance",
                "GroupSet": [
                    {
                        "Ref": "RDPSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "AssociateRDPEIP": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "RDPEIP",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "RDPInterface"
                }
            }
        },
        "RDPInstance": {
            "Condition": "NeedWindowsInstance",
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "RDPInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "RDPProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP RDP Instance (Public Subnet)"
                    }
                ],
                "InstanceType": {
                    "Ref": "RDPInstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<powershell>\n",
                                "Set-ExecutionPolicy RemoteSigned -Force \n",
                                "Start-Process -FilePath msiexec -ArgumentList /i,  \"http://sdk-for-net.amazonwebservices.com/latest/AWSToolsAndSDKForNet.msi\", /passive -wait \n",
                                "</powershell>"
                            ]
                        ]
                    }
                }
            }
        },
        "HANAMasterInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "HostRole": "Master"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "0",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAMasterInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sdy",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Master"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            {
                                                "Ref": "HANAMasterHostname"
                                            },
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            {
                                                "Ref": "HANAMasterHostname"
                                            },
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export S3_BUCKET=",
                                {
                                    "Ref": "SAPInstallMediaBucket"
                                },
                                "\n",
                                "export S3_BUCKET_KP=",
                                {
                                    "Ref": "SAPInstallMediaKeyPrefix"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export S3_BUCKET=",
                                            {
                                                "Ref": "SAPInstallMediaBucket"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export S3_BUCKET_KP=",
                                            {
                                                "Ref": "SAPInstallMediaKeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SAP_SID=",
                                            {
                                                "Ref": "SAPSID"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh SAPInstanceNum=",
                                {
                                    "Ref": "SAPInstanceNum"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh BACKUP_VOL=st1",
                                "\n",
                                "sh /root/install/writeconfig.sh SHARED_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh HANA_MEDIA_VOL=gp2",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "\"",
                                            "export WaitForMasterInstallWaitHandle=",
                                            "\\",
                                            "\"",
                                            {
                                                "Ref": "WaitForMasterInstallWaitHandle"
                                            },
                                            "\\",
                                            "\"",
                                            "\""
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "#sh /root/install/signal-complete.sh \n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Master",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "Status=PRE_INSTALL_COMPLETE",
                                "\"",
                                "\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                " >> /root/install.log\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/sap-s4hana-std-install-master.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -i ",
                                {
                                    "Ref": "SAPInstanceNum"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                " -w ",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"MASTER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh  -r \n",
                                "sh /root/install/sap-s4hana-std-install-validate-install.sh \"",
                                {
                                    "Ref": "WaitForMasterInstallWaitHandle"
                                },
                                "\" \n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh \n",
                                "\n",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "PlacementGroup": {
            "Type": "AWS::EC2::PlacementGroup",
            "Properties": {
                "Strategy": "cluster"
            }
        },
        "HANAWorkerInstance1": {
            "Type": "AWS::EC2::Instance",
            "Condition": "TwoOrMoreNodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "1",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker1Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 1"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "01"
                                        ]
                                    ]
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "01",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "01",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "01",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance2": {
            "Type": "AWS::EC2::Instance",
            "Condition": "ThreeOrMoreNodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "2",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker2Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 2"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "02"
                                        ]
                                    ]
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "02",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "02",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "02",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance3": {
            "Type": "AWS::EC2::Instance",
            "Condition": "FourOrMoreNodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "3",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker3Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 3"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "03"
                                        ]
                                    ]
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "03",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "03",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "03",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance4": {
            "Type": "AWS::EC2::Instance",
            "Condition": "FiveOrMoreNodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "4",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker4Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 4"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "04"
                                        ]
                                    ]
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "04",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "04",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "04",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "HANAWorkerInstance5": {
            "Type": "AWS::EC2::Instance",
            "Condition": "SixOrMoreNodes",
            "Metadata": {
                "HostRole": "Worker"
            },
            "Properties": {
                "HostId": {
                    "Fn::If": [
                        "IfDedicatedHost",
                        {
                            "Fn::Select": [
                                "5",
                                {
                                    "Ref": "DedicatedHostId"
                                }
                            ]
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAWorker5Interface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "PlacementGroupName": {
                    "Fn::If": [
                        "PlacementGroupNull",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {
                            "Ref": "PlacementGroupName"
                        }
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "SAPAMINameMap",
                                {
                                    "Ref": "MyOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Worker 5"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xv\n",
                                "mkdir /root/install \n",
                                "hostname ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "05"
                                        ]
                                    ]
                                },
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "05",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/HOSTNAME\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "HANAWorkerHostname"
                                            },
                                            "05",
                                            ".",
                                            {
                                                "Ref": "DomainName"
                                            }
                                        ]
                                    ]
                                },
                                " > /etc/hostname\n",
                                "export http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "export SAP_SID=",
                                {
                                    "Ref": "SAPSID"
                                },
                                "\n",
                                "export no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "export NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3BucketName=",
                                            {
                                                "Ref": "QSS3BucketName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export QSS3KeyPrefix=",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "wget https://",
                                {
                                    "Ref": "QSS3BucketName"
                                },
                                ".s3.amazonaws.com/",
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "scripts/sap-s4hana-download.sh --output-document=/root/install/sap-s4hana-download.sh\n",
                                "sh /root/install/sap-s4hana-download.sh",
                                "\n",
                                "chmod 755 /root/install/*.sh\n",
                                "chmod 755 /root/install/*.py\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "_",
                                        [
                                            "export TABLE_NAME=HANAMonitor_",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export TZ_INPUT_PARAM=",
                                            {
                                                "Ref": "SAPTZ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export SLESBYOSRegCode=",
                                            {
                                                "Ref": "SLESBYOSRegCode"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export DeploymentInterruptQ=",
                                            {
                                                "Ref": "DeploymentInterruptQ"
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "echo ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export MyOS=",
                                            {
                                                "Fn::FindInMap": [
                                                    "SAPAMINameMap",
                                                    {
                                                        "Ref": "MyOS"
                                                    },
                                                    "Code"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /root/install/config.sh\n",
                                "sh /root/install/writeconfig.sh MyStackId=",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh INSTALL_HANA=",
                                {
                                    "Ref": "InstallHANA"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh http_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTP_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh https_proxy=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh HTTPS_PROXY=",
                                {
                                    "Ref": "Proxy"
                                },
                                "\n",
                                "sh /root/install/writeconfig.sh no_proxy=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh NO_PROXY=localhost,127.0.0.1,169.254.169.254",
                                "\n",
                                "sh /root/install/writeconfig.sh IsMasterNode=0",
                                "\n",
                                "sh /root/install/writeconfig.sh IsWorkerNode=1",
                                "\n",
                                "sh /root/install/writeconfig.sh USR_SAP_VOL=gp2",
                                "\n",
                                "sh /root/install/writeconfig.sh REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "sh /root/install/install-aws.sh\n",
                                "sh /root/install/install-prereq.sh\n",
                                "sh /root/install/cluster-watch-engine.sh -c \n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "DomainName=",
                                {
                                    "Ref": "DomainName"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyHostname=",
                                {
                                    "Ref": "HANAWorkerHostname"
                                },
                                "05",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "MyRole=Worker",
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -i ",
                                "\"",
                                "HostCount=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"PRE_INSTALL_COMPLETE\"\n",
                                "sh /root/install/reconcile-ips.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "sh /root/install/fence-cluster.sh -w \"PRE_INSTALL_COMPLETE_ACK=",
                                {
                                    "Ref": "HostCount"
                                },
                                "\"",
                                "\n",
                                "sh /root/install/wait-for-master.sh\n",
                                "sh /root/install/install-worker.sh -s ",
                                {
                                    "Ref": "SID"
                                },
                                " -p '",
                                {
                                    "Ref": "HANAMasterPass"
                                },
                                "' -n ",
                                {
                                    "Ref": "HANAMasterHostname"
                                },
                                " -d ",
                                {
                                    "Ref": "DomainName"
                                },
                                "\n",
                                "sh /root/install/cluster-watch-engine.sh -s \"WORKER_NODE_COMPLETE\"\n",
                                "sh /root/install/wait-for-workers.sh ",
                                {
                                    "Ref": "HostCount"
                                },
                                "\n",
                                "#python /root/install/postprocess.py \n",
                                "sh /root/install/cleanup.sh ",
                                "\n",
                                "' ",
                                "\n"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "MyInstanceType"
                }
            }
        },
        "AutoRecoverAlarmMaster": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryMaster",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minute.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAMasterInstance"
                        }
                    }
                ]
            }
        },
        "AutoRecoverAlarmWorker1": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryWorker1",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAWorkerInstance1"
                        }
                    }
                ]
            }
        },
        "AutoRecoverAlarmWorker2": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryWorker2",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAWorkerInstance2"
                        }
                    }
                ]
            }
        },
        "AutoRecoverAlarmWorker3": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryWorker3",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAWorkerInstance3"
                        }
                    }
                ]
            }
        },
        "AutoRecoverAlarmWorker4": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryWorker4",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAWorkerInstance4"
                        }
                    }
                ]
            }
        },
        "AutoRecoverAlarmWorker5": {
            "Type": "AWS::CloudWatch::Alarm",
            "Condition": "AutoRecoveryWorker5",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 5 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "HANAWorkerInstance5"
                        }
                    }
                ]
            }
        }
    }
}